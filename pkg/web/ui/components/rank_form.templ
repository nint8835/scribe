package components

type RankProps struct {
	QuoteAID      string
	QuoteAContent string

	QuoteBID      string
	QuoteBContent string
}

var rankButtonClasses = map[string]string{
	"A": "bg-sky-700 hover:bg-sky-800",
	"B": "bg-rose-700 hover:bg-rose-800",
}

var keyboardShortcuts = map[string]string{
	"A": "ArrowLeft",
	"B": "ArrowRight",
}

templ LeftArrow() {
	<svg class="h-3.5 w-3.5" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
		<path d="M2.55371 5.70094C1.55371 6.27829 1.55371 7.72167 2.55371 8.29902L10.0537 12.6291C11.0537 13.2065 12.3037 12.4848 12.3037 11.3301L12.3037 2.66985C12.3037 1.51515 11.0537 0.793465 10.0537 1.37081L2.55371 5.70094Z" fill="#111827"></path>
	</svg>
}

templ RightArrow() {
	<svg class="h-3.5 w-3.5" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
		<path d="M11.4463 5.70094C12.4463 6.27829 12.4463 7.72167 11.4463 8.29902L3.94629 12.6291C2.94629 13.2065 1.69629 12.4848 1.69629 11.3301L1.69629 2.66985C1.69629 1.51515 2.94629 0.793465 3.94629 1.37081L11.4463 5.70094Z" fill="#111827"></path>
	</svg>
}

templ Kbd(key string) {
	<kbd class="hidden min-h-[30px] items-center justify-center rounded-md border border-gray-200 bg-white px-1.5 py-1 font-mono text-sm text-gray-800 shadow-[0px_2px_0px_0px_rgba(0,0,0,0.08)] md:inline-flex">
		if key == "A" {
			@LeftArrow()
		} else if key == "B" {
			@RightArrow()
		} else {
			?
		}
	</kbd>
}

templ QuoteDisplay(label string, id string, content string) {
	<div class="flex h-full flex-col">
		<div class="prose prose-invert prose-zinc max-w-none flex-1 overflow-auto whitespace-pre-wrap">
			@templ.Raw(content)
		</div>
		<button
			hx-trigger={ "click, keyup[key=='" + keyboardShortcuts[label] + "'] from:body" }
			hx-post="/rank"
			hx-target="#rank-form"
			class={ "flex w-full items-center justify-between rounded-md p-4 transition-colors", rankButtonClasses[label] }
			type="submit"
			name="winner"
			value={ id }
		>
			<span class="flex-1 text-center">{ label }</span>
			@Kbd(label)
		</button>
	</div>
}

templ RankForm(props RankProps) {
	<input type="hidden" name="quote_a_id" value={ props.QuoteAID }/>
	<input type="hidden" name="quote_b_id" value={ props.QuoteBID }/>
	@QuoteDisplay("A", props.QuoteAID, props.QuoteAContent)
	@QuoteDisplay("B", props.QuoteBID, props.QuoteBContent)
}
